name: deploy-ec2
on:
  workflow_dispatch:
deploys-aws:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3
      - name: Deploy to AWS
        run: |
          aws ec2 run-instances \
            --image-id ami-0fcc1d7ed380d3549 \
            --count 1 \
            --instance-type t2.micro \
            --key-name g11_sshkey \
            --security-group-ids sg-042896fe2dea4c357 \
            --tag-specifications "ResourceType=instance,Tags=[{Key=Name,Value=g11_instance_cli_v2}]" \
            --user-data "#!/bin/bash
              dnf update -y
              dnf install -y docker
              systemctl start docker
              systemctl enable docker
              usermod -aG docker ec2-user
              docker pull plbls2/getting-started
              docker run -d \
                -e MYSQL_HOST=mysql \
                -e MYSQL_USER=root \
                -e MYSQL_PASSWORD=secret \
                -e MYSQL_DB=todos \ 
                -p 8080:8080 plbls2/getting-started"
      - name: Wait for instance to be running
        run: aws ec2 wait instance-running --filters "Name=tag:Name,Values=g11_instance_cli_v2"
      - name: Get public IP
        id: public_ip
        run: |
          PUBLIC_IP=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=g11_instance_cli_v2" --query "Reservations[0].Instances[0].PublicIpAddress" --output text)
          echo "public_ip=$PUBLIC_IP" >> $GITHUB_ENV
      - name: Output public IP
        run: echo "Public IP: ${{ env.public_ip }}"
