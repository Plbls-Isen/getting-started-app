name: deploy-ec2
on:
  workflow_dispatch
jobs:
  deploys-aws:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Configure AWS CLI
          run: |
            aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws configure set default.region ${{ secrets.AWS_REGION }}
        - name: Deploy to AWS
          run: |
            aws ec2 run-instances \
              --image-id ami-0fcc1d7ed380d3549 \
              --count 1 \
              --instance-type t2.micro \
              --key-name g11_sshkey \
              --security-group-ids sg-042896fe2dea4c357 \
              --tag-specifications "ResourceType=instance,Tags=[{Key=Name,Value=g11_instance_cli_v2}]" \
              --user-data "#!/bin/bash
                dnf update -y
                dnf install -y docker
                systemctl start docker
                systemctl enable docker
                usermod -aG docker ec2-user

                dnf install -y mysql

                until mysql -h g11-db-instance.c5y24wq4aulw.eu-west-3.rds.amazonaws.com -u {{ secrets.DB_USER }} -p${{ secrets.DB_PASS }} -e "SELECT 1;" > /dev/null 2>&1; do
                    
                    sleep 10
                done
                mysql -h g11-db-instance.c5y24wq4aulw.eu-west-3.rds.amazonaws.com -u {{ secrets.DB_USER }} -p${{ secrets.DB_PASS }} -e "CREATE DATABASE IF NOT EXISTS todos;"
              
                docker pull plbls2/getting-started
                docker run -d -e MYSQL_HOST=${{ secrets.DB_HOST }} -e MYSQL_USER=${{ secrets.DB_USER }} -e MYSQL_PASSWORD=${{ secrets.DB_PASS }} -e MYSQL_DB=todos -p 3000:3000 plbls2/getting-started"

